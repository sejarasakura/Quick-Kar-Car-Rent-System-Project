/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.29
 * Generated at: 2020-01-06 02:28:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._005fpage.client_005fpage.customer.booking;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import _domain.Customer;
import _domain.Booking;
import _enum.ErrorDetails;
import _da.PaymentDA;
import _da.RatingDA;
import _da.BookingDA;
import _enum.PaymentStatus;
import _domain.Car;
import _da.CarDA;
import _manipulation.MapManipulation;
import _domain.DistanceMatricRespond;
import _da.PaymentMethodDA;
import _domain.PaymentMethod;
import _domain.PaymentMethod;
import _domain.Payment;
import _enum.RatingStar;
import _domain.Rating;
import _enum.BookingStatus;
import java.util.Date;
import java.text.SimpleDateFormat;
import _domain.Driver;
import _servletAPI._session.CustomerSession;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("_da.RatingDA");
    _jspx_imports_classes.add("_domain.Car");
    _jspx_imports_classes.add("_da.PaymentMethodDA");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("_domain.Payment");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("_da.CarDA");
    _jspx_imports_classes.add("_domain.Rating");
    _jspx_imports_classes.add("_domain.DistanceMatricRespond");
    _jspx_imports_classes.add("_da.BookingDA");
    _jspx_imports_classes.add("_enum.ErrorDetails");
    _jspx_imports_classes.add("_enum.RatingStar");
    _jspx_imports_classes.add("_domain.Booking");
    _jspx_imports_classes.add("_domain.PaymentMethod");
    _jspx_imports_classes.add("_enum.BookingStatus");
    _jspx_imports_classes.add("_enum.PaymentStatus");
    _jspx_imports_classes.add("_domain.Customer");
    _jspx_imports_classes.add("_da.PaymentDA");
    _jspx_imports_classes.add("_domain.Driver");
    _jspx_imports_classes.add("_servletAPI._session.CustomerSession");
    _jspx_imports_classes.add("_manipulation.MapManipulation");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm");
    Object[] drivers = new _da.DriverDA().getRecords();        
    int max = drivers.length - 1; 
    int min = 0; 
    int range = max - min + 1; 
    int random_driver = (int)(Math.random() * range) + min;
    CustomerSession new_c = new CustomerSession();
    new_c.retriveSeesion(request);
    String pay_method_id = request.getParameter("pay_method_id").split("-")[0];
    String booking_id = _control.GenerateID.generate_Booking();
    String rating_id = _control.GenerateID.generate_Rating();
    String cust_id = new_c.getUsername();
    String driver_id = ((Driver)drivers[random_driver]).getDriver_id();
    String driver_name = ((Driver)drivers[random_driver]).getFull_Name();
    String payment_id = _control.GenerateID.generate_Payment(pay_method_id);
    Date fetch_date = formatter.parse((String)request.getParameter("fetch_date"));
    BookingStatus booking_status = BookingStatus.PADDING_PAYMENT;
    String start_location = request.getParameter("start_location");
    String end_location = request.getParameter("end_location");
    Rating rating = new Rating(rating_id, RatingStar.ZERO_STAR, "", new Date());
    PaymentMethod payment_mothod = (PaymentMethod)new PaymentMethodDA().getRecord(pay_method_id);
    Payment payment = new Payment(payment_id, payment_mothod, PaymentStatus.NOT_YET_PAID ,new Date(), 0.00);
    DistanceMatricRespond distance = MapManipulation.getResponse(start_location, end_location);
    CarDA carda = new CarDA();
    Object[] car = carda.getRecords("driver_id = '" + driver_id + "'");
    Car real_car = (Car)car[0];
    double price1 = real_car.getQuickar_type().getPrice_per_km() * distance.getDistance_value() / 1000;
    double price2 = real_car.getQuickar_type().getPrice_per_min() * distance.getDuration_value() / 60;
    double price = (price1 + price2)/2;
    price += real_car.getQuickar_type().getBase_fair_price();
    if(price < real_car.getQuickar_type().getMinimum_price())
        price = real_car.getQuickar_type().getMinimum_price();
    payment.setPayment_amount(price);
    BookingDA da = new BookingDA();
    RatingDA da_1 = new RatingDA();
    PaymentDA da_2 = new PaymentDA();
    ErrorDetails error = ErrorDetails.E000;
    if(!da_2.addRecord(payment)){
        error = ErrorDetails.E009;
    }
    if(!da_1.addRecord(rating)){
        error = ErrorDetails.E009;
    }
    Booking booking = new Booking(booking_id, rating, new Customer(cust_id), new Driver(driver_id), payment, new Date(), fetch_date, booking_status, start_location, end_location);
    if(!da.addRecord(booking)){
        error = ErrorDetails.E009;
    }
    request.getSession().setAttribute("current_payment_object", payment);

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"payment.css\">\n");
      out.write("        <link rel=\"icon\" href=\"http://localhost:8080/GroupProject/_resource/icon/top_full_icon.png\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"http://localhost:8080/GroupProject/_bootstrap/css/bootstrap.min.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"http://localhost:8080/GroupProject/_bootstrap/css/bootstrap.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"http://localhost:8080/GroupProject/_jquery/jquery-ui.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"http://localhost:8080/GroupProject/_jquery/jquery-confirm.min.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"http://localhost:8080/GroupProject/_css/main_style.css\">\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_js/map-google.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_jquery/jquery.min.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_jquery/jquery-confirm.min.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_jquery/jquery.validate.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_jquery/jquery.validate.min.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_jquery/jquery-ui.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_bootstrap/js/bootstrap.min.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_jquery/jquery-migrate-3.0.0.min.js\"></script>\n");
      out.write("        <script src=\"http://localhost:8080/GroupProject/_js/Validatation_c.js\"></script>\n");
      out.write("    <script>\n");
      out.write("            jQuery(document).ready(\n");
      out.write("                function(){\n");
      out.write("                    $(\"#header\").load(\"http://localhost:8080/GroupProject/_page/client_base/c_header.jsp\");\n");
      out.write("                    $(\"#footer\").load(\"http://localhost:8080/GroupProject/_page/client_base/c_footer.html\");\n");
      out.write("                }\n");
      out.write("            );\n");
      out.write("        </script>\n");
      out.write("    <title>Payment</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div id=\"header\"></div>\n");
      out.write("        \n");
      out.write("        <div class=\"container\" style=\"padding-top: 100px;padding-bottom: 100px\">\n");
      out.write("            <h1>Searching driver for you</h1>\n");
      out.write("            <h2 id=\"demo\"></h2>\n");
      out.write("        </div>\n");
      out.write("        ");
if(payment.getPayment_method().getPay_method().getCode() != "CH"){
      out.write("\n");
      out.write("        <script>\n");
      out.write("            $.confirm({\n");
      out.write("                title: '',\n");
      out.write("                content: 'Do you want to pay not! with ");
      out.print(payment.getPayment_method().getPay_method().getName());
      out.write("',\n");
      out.write("                type: 'green',\n");
      out.write("                typeAnimated: true,\n");
      out.write("                buttons: {\n");
      out.write("                    tryAgain: {\n");
      out.write("                        text: 'Pay now',\n");
      out.write("                        btnClass: 'btn-green',\n");
      out.write("                        action: function(){\n");
      out.write("                            window.location.replace(\"http://localhost:8080/GroupProject/doing_payment_cust_now\");\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    close: {\n");
      out.write("                        text: 'Finish',\n");
      out.write("                        btnClass: 'btn-red',\n");
      out.write("                        action:function () {\n");
      out.write("                            window.location.replace(\"http://localhost:8080/GroupProject/_page/client_page/all_user/home/home.html\");\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("<script>\n");
      out.write("// Set the date we're counting down to\n");
      out.write("var list_s = [\n");
      out.write("  \"System findind driver for you ..........\",\n");
      out.write("  \"Get the nearest driver to you ..........\",\n");
      out.write("  \"Just amoment ...........................\",\n");
      out.write("  \"");
      out.print( ((Driver)drivers[(int)(Math.random() * range) + min]).getFull_Name());
      out.write(" rejected you ....\", \n");
      out.write("  \"");
      out.print( ((Driver)drivers[(int)(Math.random() * range) + min]).getFull_Name());
      out.write(" rejected you ....\", \n");
      out.write("  \"");
      out.print( ((Driver)drivers[(int)(Math.random() * range) + min]).getFull_Name());
      out.write(" rejected you ....\", \n");
      out.write("  \"");
      out.print( ((Driver)drivers[(int)(Math.random() * range) + min]).getFull_Name());
      out.write(" rejected you ....\"\n");
      out.write("];\n");
      out.write("var i = 0;\n");
      out.write("\n");
      out.write("// Update the count down every 1 second\n");
      out.write("var x = setInterval(function() {\n");
      out.write("  \tdocument.getElementById(\"demo\").innerHTML = list_s[i] \n");
      out.write("  \ti ++;\n");
      out.write("  // If the count down is over, write some text \n");
      out.write("  if (i === 6) {\n");
      out.write("    clearInterval(x);                        \n");
      out.write("    document.getElementById(\"demo\").innerHTML = \"");
      out.print( driver_name);
      out.write(" accepted your halling ....\";\n");
      out.write("  }\n");
      out.write("}, 1000);\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("        <div id=\"footer\"></div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
